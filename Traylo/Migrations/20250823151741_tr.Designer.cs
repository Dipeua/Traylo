// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Traylo.Data;

#nullable disable

namespace Traylo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250823151741_tr")]
    partial class tr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Traylo.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Traylo.Models.DeliveryPerson", b =>
                {
                    b.Property<int>("DeliveryPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DeliveryPersonId");

                    b.HasIndex("CityId");

                    b.ToTable("DeliveryPeople");
                });

            modelBuilder.Entity("Traylo.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeliveryPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InitQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("QuantityDelivery")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuantityReste")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.HasIndex("DeliveryPersonId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            InitQuantity = 0,
                            Name = "CARDIHIT"
                        },
                        new
                        {
                            ProductId = 2,
                            InitQuantity = 0,
                            Name = "ST HEART"
                        },
                        new
                        {
                            ProductId = 3,
                            InitQuantity = 0,
                            Name = "DIABETIC"
                        },
                        new
                        {
                            ProductId = 4,
                            InitQuantity = 0,
                            Name = "XENOPROST ACTIVE"
                        },
                        new
                        {
                            ProductId = 5,
                            InitQuantity = 0,
                            Name = "SLIMUX"
                        },
                        new
                        {
                            ProductId = 6,
                            InitQuantity = 0,
                            Name = "PROSTUROX"
                        },
                        new
                        {
                            ProductId = 7,
                            InitQuantity = 0,
                            Name = "FAST ACTIVE"
                        },
                        new
                        {
                            ProductId = 8,
                            InitQuantity = 0,
                            Name = "GLUCOZEIN"
                        });
                });

            modelBuilder.Entity("Traylo.Models.StockHistory", b =>
                {
                    b.Property<int>("StockHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DeliveryPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityChange")
                        .HasColumnType("INTEGER");

                    b.HasKey("StockHistoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("DeliveryPersonId");

                    b.HasIndex("ProductId");

                    b.ToTable("StockHistories");
                });

            modelBuilder.Entity("Traylo.Models.StockSuivi", b =>
                {
                    b.Property<int>("StockSuiviId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeliveryPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Entrees")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sorties")
                        .HasColumnType("INTEGER");

                    b.HasKey("StockSuiviId");

                    b.HasIndex("DeliveryPersonId");

                    b.HasIndex("ProductId");

                    b.ToTable("StockSuivis");
                });

            modelBuilder.Entity("Traylo.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PasswordHash = "admin",
                            Role = 0,
                            Username = "Paulin"
                        },
                        new
                        {
                            UserId = 2,
                            PasswordHash = "admin",
                            Role = 0,
                            Username = "Dipeua"
                        },
                        new
                        {
                            UserId = 3,
                            PasswordHash = "manager",
                            Role = 1,
                            Username = "Stephanie"
                        });
                });

            modelBuilder.Entity("Traylo.Models.DeliveryPerson", b =>
                {
                    b.HasOne("Traylo.Models.City", "City")
                        .WithMany("DeliveryPeople")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Traylo.Models.Product", b =>
                {
                    b.HasOne("Traylo.Models.DeliveryPerson", null)
                        .WithMany("Products")
                        .HasForeignKey("DeliveryPersonId");
                });

            modelBuilder.Entity("Traylo.Models.StockHistory", b =>
                {
                    b.HasOne("Traylo.Models.City", "City")
                        .WithMany("StockHistories")
                        .HasForeignKey("CityId");

                    b.HasOne("Traylo.Models.DeliveryPerson", "DeliveryPerson")
                        .WithMany("StockHistories")
                        .HasForeignKey("DeliveryPersonId");

                    b.HasOne("Traylo.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("DeliveryPerson");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Traylo.Models.StockSuivi", b =>
                {
                    b.HasOne("Traylo.Models.DeliveryPerson", "DeliveryPerson")
                        .WithMany()
                        .HasForeignKey("DeliveryPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traylo.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryPerson");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Traylo.Models.User", b =>
                {
                    b.HasOne("Traylo.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Traylo.Models.City", b =>
                {
                    b.Navigation("DeliveryPeople");

                    b.Navigation("StockHistories");
                });

            modelBuilder.Entity("Traylo.Models.DeliveryPerson", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("StockHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
